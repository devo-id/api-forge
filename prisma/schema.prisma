generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(cuid())
  name               String?
  email              String?             @unique
  emailVerified      DateTime?
  image              String?
  password           String
  accounts           Account[]
  PasswordResetToken PasswordResetToken?
  projects           Project[]
  sessions           Session[]
}

model Project {
  id          String     @id @default(cuid())
  name        String
  userId      String
  createdAt   DateTime   @default(now())
  description String?
  stateful    Boolean    @default(false)
  updatedAt   DateTime   @default(now())
  endpoints   Endpoint[]
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Endpoint {
  id        String  @id @default(cuid())
  path      String
  method    String
  jsonBody  String
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  token   String   @unique
  expires DateTime
  userId  String   @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
